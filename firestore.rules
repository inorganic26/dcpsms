rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =========================================
    // 공통 헬퍼
    // =========================================
    function isAuthenticated() {
      // 익명 로그인(anonymous auth) 포함: request.auth != null 이면 true
      return request.auth != null;
    }

    // 지금은 역할(관리자/교사)을 따로 구분 안 하고
    // "로그인만 되어 있으면 관리자/교사 취급"으로 둔 상태.
    // 실제 배포에서는 custom claims로 role 체크해서 강화해야 함.
    function isAdminOrTeacher() {
      // TODO: 실제 운영에서는 custom claims (request.auth.token.role) 체크 필요
      return isAuthenticated();
    }

    // =========================================
    // classes 컬렉션
    // =========================================
    match /classes/{classId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // students 컬렉션
    // =========================================
    match /students/{studentId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // subjects 컬렉션 (+ 하위 컬렉션)
    // =========================================
    match /subjects/{subjectId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();

      match /textbooks/{textbookId} {
        allow read: if isAuthenticated();
        allow write: if isAdminOrTeacher();
      }

      match /lessons/{lessonId} {
        allow read: if isAuthenticated();
        allow write: if isAdminOrTeacher();

        // --- 👇 수정된 submissions 규칙 👇 ---
        match /submissions/{submissionUid} {
          // 읽기: 로그인했고, 제출자 본인이거나 혹은 교사/관리자일 때
          allow read: if isAuthenticated() &&
                        (request.auth.uid == submissionUid || isAdminOrTeacher());
          // 생성/수정: 로그인했고, 제출자 본인일 때만 허용
          allow create, update: if isAuthenticated() && request.auth.uid == submissionUid;
          // 삭제: 교사/관리자만 허용
          allow delete: if isAdminOrTeacher();
          // allow write 규칙 제거 (create, update로 대체)
        }
        // --- 👆 ---
      }
    }

    // =========================================
    // lessons 컬렉션 (최상위) - 학생 앱 호환용 (현재 사용 안 함)
    // =========================================
    match /lessons/{lessonId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // homeworks 컬렉션 (+ 하위 submissions)
    // =========================================
    match /homeworks/{homeworkId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher(); // 숙제 생성/수정은 관리자/교사만

      match /submissions/{submissionUid} {
        // 읽기: 본인 또는 관리자/교사
        allow read: if isAuthenticated() &&
                    (request.auth.uid == submissionUid || isAdminOrTeacher());
        // 쓰기(생성/수정): 본인 또는 관리자/교사 (교사가 수정할 수도 있으므로 write 유지)
        allow write: if isAuthenticated() &&
                     (request.auth.uid == submissionUid || isAdminOrTeacher());
        // 삭제: 관리자/교사만
        allow delete: if isAdminOrTeacher();
      }
    }

    // =========================================
    // teachers 컬렉션
    // =========================================
    match /teachers/{teacherId} {
      allow read, write: if isAdminOrTeacher();
    }

    // =========================================
    // classVideos / classLectures (수업/질문 영상)
    // =========================================
    match /classVideos/{videoId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }
    match /classLectures/{lectureId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // 기본 거부
    // =========================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}