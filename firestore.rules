rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =========================================
    // 공통 헬퍼
    // =========================================
    function isAuthenticated() {
      // 익명 로그인(anonymous auth) 포함: request.auth != null 이면 true
      return request.auth != null;
    }

    // 지금은 역할(관리자/교사)을 따로 구분 안 하고
    // "로그인만 되어 있으면 관리자/교사 취급"으로 둔 상태.
    // 실제 배포에서는 custom claims로 role 체크해서 강화해야 함.
    function isAdminOrTeacher() {
      // TODO: 실제 운영에서는 custom claims (request.auth.token.role) 체크 필요
      return isAuthenticated();
    }

    // =========================================
    // classes 컬렉션
    // =========================================
    match /classes/{classId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // students 컬렉션
    // =========================================
    match /students/{studentId} {
      allow read: if isAuthenticated();
      // 학생 본인도 자기 정보 수정 가능하게 하려면? (예: 비밀번호 변경)
      // allow update: if isAdminOrTeacher() || request.auth.uid == studentId; // (주의: studentId가 auth.uid와 같다는 보장 없음)
      // student 문서 내부에 authUid 필드를 저장하고 비교하는 방식이 더 일반적
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // subjects 컬렉션 (+ 하위 컬렉션)
    // =========================================
    match /subjects/{subjectId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();

      match /textbooks/{textbookId} {
        allow read: if isAuthenticated();
        allow write: if isAdminOrTeacher();
      }

      match /lessons/{lessonId} {
        allow read: if isAuthenticated();
        allow write: if isAdminOrTeacher();

        // --- 👇 수정된 submissions 규칙 (studentDocId 사용) 👇 ---
        match /submissions/{studentDocId} { // 문서 ID를 학생 Firestore 문서 ID로 사용
          // 읽기: 교사/관리자만 허용 (학생은 자기 진행상황을 앱 로컬에서 관리)
          allow read: if isAdminOrTeacher();
          // 생성/수정: 로그인했고, 제출하려는 문서 ID가 실제 제출하는 학생의 문서 ID와 일치할 때
          // (주의: 학생 앱에서 studentDocId를 올바르게 전달해야 함)
          // (주의: request.resource.data.studentDocId는 쓰기/업데이트 시에만 사용 가능)
          allow create, update: if isAuthenticated() && request.resource.data.studentDocId == studentDocId;
          // 삭제: 교사/관리자만 허용
          allow delete: if isAdminOrTeacher();
        }
        // --- 👆 ---
      }
    }

    // =========================================
    // lessons 컬렉션 (최상위) - 현재 사용 안 함
    // =========================================
    match /lessons/{lessonId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // homeworks 컬렉션 (+ 하위 submissions)
    // =========================================
    match /homeworks/{homeworkId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher(); // 숙제 생성/수정은 관리자/교사만

      match /submissions/{studentDocId} { // 문서 ID를 학생 Firestore 문서 ID로 사용
        // 읽기: 교사/관리자만 허용
        allow read: if isAdminOrTeacher();
        // 쓰기(생성/수정): 로그인했고, 제출하려는 문서 ID가 실제 제출하는 학생의 문서 ID와 일치할 때
        // (주의: 학생 앱에서 studentDocId를 올바르게 전달해야 함)
        allow write: if isAuthenticated() && request.resource.data.studentDocId == studentDocId;
        // 삭제: 교사/관리자만 허용
        allow delete: if isAdminOrTeacher();
      }
    }

    // =========================================
    // teachers 컬렉션
    // =========================================
    match /teachers/{teacherId} {
      allow read, write: if isAdminOrTeacher();
    }

    // =========================================
    // classVideos / classLectures (수업/질문 영상)
    // =========================================
    match /classVideos/{videoId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }
    match /classLectures/{lectureId} {
      allow read: if isAuthenticated();
      allow write: if isAdminOrTeacher();
    }

    // =========================================
    // 기본 거부
    // =========================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}